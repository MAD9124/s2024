(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{435:function(t,e,i){"use strict";i.r(e);var a=i(14),l=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"assignment-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#assignment-3"}},[t._v("#")]),t._v(" Assignment 3")]),t._v(" "),e("h1",{attrs:{id:"api-with-authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api-with-authentication"}},[t._v("#")]),t._v(" API With Authentication")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Due before our week 13 class.")]),t._v(" "),e("p",[t._v("Counts for 10% of your final grade.")])]),t._v(" "),e("h2",{attrs:{id:"the-brief"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-brief"}},[t._v("#")]),t._v(" The brief")]),t._v(" "),e("p",[t._v("This is the third of three take home assignments related to building a backend web service to support a simple golf application called "),e("em",[t._v("golfR")]),t._v(".")]),t._v(" "),e("p",[t._v("In the previous assignments you built the base for the "),e("em",[t._v("golfR")]),t._v(" RESTful API using Node.js, the Express framework and MongoDB. For this assignment you will enhance that foundation with Google OAuth 2.0 authentication.")]),t._v(" "),e("p",[t._v("In addition to correctly implementing all of the requirements from the previous assignment. The application will implement the following.")]),t._v(" "),e("h2",{attrs:{id:"core-requirements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#core-requirements"}},[t._v("#")]),t._v(" Core Requirements")]),t._v(" "),e("ol",[e("li",[t._v("Create a new "),e("code",[t._v("/auth")]),t._v(" router module that will support")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("/google")]),t._v(" | redirecting a user to google api for authentication")]),t._v(" "),e("li",[e("code",[t._v("/google/callback")]),t._v(" | handle the callback from google")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("The user schema should have the following properties:")])]),t._v(" "),e("h4",{attrs:{id:"user"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#user"}},[t._v("#")]),t._v(" User")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Property")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Required")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Min Length")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Max Length")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("64")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("googleId")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}}),t._v(" "),e("td",{staticStyle:{"text-align":"right"}})])])]),t._v(" "),e("h4",{attrs:{id:"course"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#course"}},[t._v("#")]),t._v(" Course")]),t._v(" "),e("p",[t._v("A golf "),e("strong",[t._v("course")]),t._v(" is the location where a "),e("strong",[t._v("round")]),t._v(" of golf is played. Traditionally, a golf course will have 18 holes of varying length and difficulty. A "),e("em",[t._v("par")]),t._v(" is assigned to each hole (either 3, 4 or 5) and represents the score a good golfer will score on the hole, allowing for 2 putts.")]),t._v(" "),e("p",[t._v("For this API, we will want to know the name of the course, and the par and distance of each of the 18 holes.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Property")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Required")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Min Length")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Max Length")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("_id")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("ObjectId")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}}),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("Auto generated by Mongodb")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("250")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("holes")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("[Hole]")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18")])])])]),t._v(" "),e("h4",{attrs:{id:"hole"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hole"}},[t._v("#")]),t._v(" Hole")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Property")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Required")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Min Value")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Max Value")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("par")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Number")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("5")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("distance")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Number")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("0")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("999")])])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("Do not create a collection for "),e("strong",{staticStyle:{"font-weight":"900"}},[t._v("Hole")]),t._v("!")]),t._v(" "),e("p",[t._v("Hole will be a nested object that only lives in the Course collection.\nIt should not have an _id property")])]),t._v(" "),e("h4",{attrs:{id:"round"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#round"}},[t._v("#")]),t._v(" Round")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Property")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Required")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Min Length")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Max Length")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Notes")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("_id")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("ObjectId")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}}),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("Auto generated by Mongodb")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}})]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("course")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Course")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}}),t._v(" "),e("td",{staticStyle:{"text-align":"right"}}),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("This should be populated for all responses except POST")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("user")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("User")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("64")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("This should be populated for all responses except POST")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("scores")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("[Number]")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}})])])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[t._v("All requests to the "),e("em",[t._v("round")]),t._v(" resource are only available to authenticated users. All requests to the "),e("em",[t._v("course")]),t._v(" resource are available to all users, authenticated or unauthenticated.")])]),t._v(" "),e("li",[e("p",[t._v("All requests to the "),e("em",[t._v("round")]),t._v(" resource should be limited to the authenticated user of the given "),e("em",[t._v("round")]),t._v(". This means the get "),e("code",[t._v("/")]),t._v(" request should return a list of only the authenticated user's rounds. Any request with an id should return status "),e("code",[t._v("403")]),t._v(" if the round does not belong to the authenticated user.")])]),t._v(" "),e("li",[e("p",[t._v("Ensure all expected errors are properly formatted, and respond with the correct status code. This includes malformed object ids and failing mongoose validation errors."),e("MicroText",{attrs:{label:"All errors messages should end with 2 periods"}})],1)]),t._v(" "),e("li",[e("p",[t._v("Use security best practices to guard again Cross Site Scripting (XSS) and database injection attacks.")])]),t._v(" "),e("li",[e("p",[t._v("Ensure that you write clean and readable code. Pay attention to:")])])]),t._v(" "),e("ul",[e("li",[t._v("no runtime errors")]),t._v(" "),e("li",[t._v("consistent 2 space indentation")]),t._v(" "),e("li",[t._v("USE YARN, not NPM")]),t._v(" "),e("li",[t._v("follow the project structure used in this course")]),t._v(" "),e("li",[t._v("properly formatted JSON responses with either "),e("code",[t._v("data")]),t._v(" or "),e("code",[t._v("error")]),t._v(" at the root")]),t._v(" "),e("li",[t._v("no debugging console logs")]),t._v(" "),e("li",[t._v("no commented out code")]),t._v(" "),e("li",[t._v("semantically descriptive names for variables and functions")]),t._v(" "),e("li",[t._v("use a .gitignore file and do not commit node_modules/ or .env files")]),t._v(" "),e("li",[t._v("include .env.example file")]),t._v(" "),e("li",[t._v("properly formatted "),e("code",[t._v("package.json")]),t._v(" file\n"),e("ul",[e("li",[t._v("correct project name")]),t._v(" "),e("li",[t._v("your author details")]),t._v(" "),e("li",[t._v("start and dev scripts")])])])]),t._v(" "),e("h2",{attrs:{id:"logistics"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logistics"}},[t._v("#")]),t._v(" Logistics")]),t._v(" "),e("ul",[e("li",[t._v("Continue working in your Assignment 1 repo.")]),t._v(" "),e("li",[t._v("Build the project on your laptop.")]),t._v(" "),e("li",[t._v("Test each route with Postman.")]),t._v(" "),e("li",[t._v("Make git commits as you complete each requirement")]),t._v(" "),e("li",[t._v("When everything is complete, push the final commit back up to GitHub and submit the GitHub repo's URL on Brightspace.\n"),e("ul",[e("li",[t._v("You should not have to send me a new collaboration request, it should be the same repo as the other 2 assignments!")])])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("It is a good habit to make a git commit as you complete each logical requirement. This not only tracks your progress, but protects your working code in case you later break it and need to roll back.")])])])}),[],!1,null,null,null);e.default=l.exports}}]);