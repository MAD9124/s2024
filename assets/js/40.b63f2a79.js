(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{432:function(t,e,a){"use strict";a.r(e);var i=a(14),o=Object(i.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"assignment-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#assignment-2"}},[t._v("#")]),t._v(" Assignment 2")]),t._v(" "),e("h1",{attrs:{id:"crud-api-with-mongodb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crud-api-with-mongodb"}},[t._v("#")]),t._v(" CRUD API with Mongodb")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Due before our week 11 class.")]),t._v(" "),e("p",[t._v("Counts for 10% of your final grade.")])]),t._v(" "),e("h2",{attrs:{id:"details-coming-soon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#details-coming-soon"}},[t._v("#")]),t._v(" Details Coming Soon")]),t._v(" "),e("h2",{attrs:{id:"the-brief"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-brief"}},[t._v("#")]),t._v(" The brief")]),t._v(" "),e("p",[t._v("This is the second of three take home assignments related to building a backend web service to support a simple application called "),e("em",[t._v("golfR")]),t._v(".")]),t._v(" "),e("p",[t._v("In the previous assignment you built the base for the "),e("em",[t._v("golfR")]),t._v(" RESTful API using Node.js and the Express framework. For this assignment you will enhance that base application to use MongoDB for data persistance and add a second "),e("em",[t._v("user")]),t._v(" resource.")]),t._v(" "),e("h2",{attrs:{id:"core-requirements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#core-requirements"}},[t._v("#")]),t._v(" Core Requirements")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Using the Express.js framework, the API will expose a full set of CRUD routes (six, including both "),e("code",[t._v("put")]),t._v(" and "),e("code",[t._v("patch")]),t._v(") for each of two resources: "),e("strong",[t._v("round")]),t._v(", and "),e("strong",[t._v("course")]),t._v(". All API resource paths must begin with "),e("code",[t._v("/api")]),t._v(". (ie "),e("code",[t._v("/api/rounds")]),t._v(" + "),e("code",[t._v("/api/courses")]),t._v(")")])]),t._v(" "),e("li",[e("p",[t._v("Resource collections will be stored in MongoDB and accessed via Mongoose Model classes. The "),e("code",[t._v("Model.schema")]),t._v(" for the resource objects will have the following properties.")])])]),t._v(" "),e("h4",{attrs:{id:"course"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#course"}},[t._v("#")]),t._v(" Course")]),t._v(" "),e("p",[t._v("A golf "),e("strong",[t._v("course")]),t._v(" is the location where a "),e("strong",[t._v("round")]),t._v(" of golf is played. Traditionally, a golf course will have 18 holes of varying length and difficulty. A "),e("em",[t._v("par")]),t._v(" is assigned to each hole (either 3, 4 or 5) and represents the score a good golfer will score on the hole, allowing for 2 putts.")]),t._v(" "),e("p",[t._v("For this API, we will want to know the name of the course, and the par and distance of each of the 18 holes.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Property")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Required")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Min Length")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Max Length")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("_id")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("ObjectId")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}}),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("Auto generated by Mongodb")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("250")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("holes")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("[Hole]")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18")])])])]),t._v(" "),e("h4",{attrs:{id:"hole"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hole"}},[t._v("#")]),t._v(" Hole")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Property")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Required")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Min Value")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Max Value")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("par")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Number")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("5")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("distance")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Number")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("0")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("999")])])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("Do not create a collection for "),e("strong",{staticStyle:{"font-weight":"900"}},[t._v("Hole")]),t._v("!")]),t._v(" "),e("p",[t._v("Hole will be a nested object that only lives in the Course collection.\nIt should not have an _id property")])]),t._v(" "),e("h4",{attrs:{id:"round"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#round"}},[t._v("#")]),t._v(" Round")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Property")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Required")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Min Length")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("Max Length")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("_id")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("ObjectId")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}}),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("Auto generated by Mongodb")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("course")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Course")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}}),t._v(" "),e("td",{staticStyle:{"text-align":"right"}})]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("username")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("64")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("scores")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("[Number]")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18")])])])]),t._v(" "),e("br"),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Remember")]),t._v(" "),e("p",[t._v("The MongoDB driver will automatically assign the "),e("code",[t._v("_id")]),t._v(" property.")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[t._v("The "),e("code",[t._v("course")]),t._v(" property of the Round model should be an object id referencing the Course model. Whenever a round is fetched, the course property should be "),e("code",[t._v("populated")]),t._v(" with all of the data for the corresponding course.")])]),t._v(" "),e("li",[e("p",[t._v("Each resource should have its own "),e("a",{attrs:{href:"https://expressjs.com/en/4x/api.html#router",target:"_blank",rel:"noopener noreferrer"}},[t._v("Router module"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("li",[e("p",[t._v("Routes related to individual members of a resource collection should return a properly formatted error response with an error object for any invalid "),e("code",[t._v("req.body")]),t._v(" or not found "),e("code",[t._v("req.params.id")]),t._v(" value.")])]),t._v(" "),e("li",[e("p",[t._v("Ensure that you write clean and readable code. Pay attention to:")])])]),t._v(" "),e("ul",[e("li",[t._v("no runtime errors")]),t._v(" "),e("li",[t._v("follow the project structure used in this course")]),t._v(" "),e("li",[t._v("properly formatted JSON responses with either "),e("code",[t._v("data")]),t._v(" or "),e("code",[t._v("error")]),t._v(" at the root")]),t._v(" "),e("li",[t._v("no debugging console logs")]),t._v(" "),e("li",[t._v("no commented out code")]),t._v(" "),e("li",[t._v("semantically descriptive names for variables and functions")]),t._v(" "),e("li",[t._v("use a .gitignore file and do not commit node_modules/ or .env files")]),t._v(" "),e("li",[t._v("include .env.example file")]),t._v(" "),e("li",[t._v("properly formatted "),e("code",[t._v("package.json")]),t._v(" file\n"),e("ul",[e("li",[t._v("correct project name")]),t._v(" "),e("li",[t._v("your author details")]),t._v(" "),e("li",[t._v("start and dev scripts")])])])]),t._v(" "),e("h3",{attrs:{id:"note-validation-can-now-be-taken-care-of-by-mongoose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#note-validation-can-now-be-taken-care-of-by-mongoose"}},[t._v("#")]),t._v(" NOTE - Validation can now be taken care of by mongoose")]),t._v(" "),e("ul",[e("li",[t._v("Make sure to use async / await correctly")]),t._v(" "),e("li",[t._v("Make sure to import and export correctly to and from each module")])]),t._v(" "),e("h2",{attrs:{id:"logistics"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logistics"}},[t._v("#")]),t._v(" Logistics")]),t._v(" "),e("ul",[e("li",[t._v("Start with the finished code in your "),e("code",[t._v("assignment")]),t._v(" repo.")]),t._v(" "),e("li",[t._v("If you are not happy with your assignment 1, feel free to copy my assignment 1 example into your repo.")]),t._v(" "),e("li",[t._v("Migrate all of your service methods to use "),e("code",[t._v("mongoose")]),t._v(" instead of an in memory "),e("code",[t._v("round")]),t._v(" array.")]),t._v(" "),e("li",[t._v("Build the project on your laptop.")]),t._v(" "),e("li",[t._v("Test each route with Postman.")]),t._v(" "),e("li",[t._v("Make git commits as you complete each requirement")]),t._v(" "),e("li",[t._v("When everything is complete, push the final commit back up to GitHub and submit the GitHub repo's URL on Brightspace.")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("It is a good habit to make a git commit as you complete each logical requirement. This not only tracks your progress, but protects your working code in case you later break it and need to roll back.")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("A Testing suite can be found in week10/assigment-2-tests of the in-class repo")])])])}),[],!1,null,null,null);e.default=o.exports}}]);